uniform sampler2D u_texture;
// Sun shading.
uniform bool u_sun_shading;
// Highlighting ring.
uniform bool u_process_touch;
uniform float u_touch_angle;
uniform vec3 u_touch_coord;

varying vec3 v_normal;
varying vec2 v_tex_coord;
varying vec3 v_position;

void SunShading(vec3 v_position);

vec3 GetLightVector();

void HighlightingRing() {
  float c_highlighting_internal_ring_radius = 0.8f;  // in [0, 1]
  vec4 c_highlighting_color = vec4(0.0f, 0.8f, 0.0f, 0.3f);

  float angle = acos(dot( normalize(v_position), normalize(u_touch_coord) ));
  if (c_highlighting_internal_ring_radius * u_touch_angle <= angle &&
      angle <= u_touch_angle) {
    float alpha = c_highlighting_color[3];
    gl_FragColor = (1.0f - alpha) * gl_FragColor +
                   alpha * c_highlighting_color;
  }
}

void main() {
  vec3 n_light_vector = GetLightVector();
  vec3 n_normal = normalize(v_normal);

  float lum_value = (dot(n_light_vector, n_normal) + 2.0f) / 3.0f;
  gl_FragColor = texture2D(u_texture, v_tex_coord) * lum_value;

  if (u_sun_shading) {
    SunShading(v_position);
  }
  if (u_process_touch) {
    HighlightingRing();
  }
}
