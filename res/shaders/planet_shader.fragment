uniform sampler2D u_texture;
// Sun shading.
uniform vec3 u_sun_position;
uniform float u_sun_radius;
uniform vec3 u_planet_position;
uniform float u_planet_radius;
// Highlighting ring.
uniform bool u_process_touch;
uniform float u_touch_angle;
uniform vec3 u_touch_coord;
uniform vec4 u_highlighting_color;

varying vec3 v_normal;
varying vec2 v_tex_coord;
varying vec3 v_position;

void main() {
  // Parameters.
  float highlighting_internal_ring_radius = 0.8;  // in [0, 1]

  vec3 light_vector = u_sun_position - u_planet_position;
  vec4 n_light_vector = vec4( normalize(light_vector), 0.0);
  vec4 n_normal = vec4( normalize(v_normal), 0.0);
  vec4 n_position = vec4( normalize(v_position - u_planet_position), 0.0 );
  float distance_to_sun = sqrt(dot(light_vector, light_vector));

  float lum_value = (dot(n_light_vector, n_normal) + 2.0) / 3.0;
  gl_FragColor = texture2D(u_texture, v_tex_coord) * lum_value;

  // Check sun covering.
  //                      ___0____
  //                     /   |  / \
  //                    /    | /   \
  //                 1 |_____|/_____| -1
  //                   | cover\     |
  //                    \angle \   /
  //                     \___|__\_/
  //                         0
  //   <-- sun             planet

  // cos(cover_angle) = (r - R) / d. Value in [-1, 0];
  float sun_cover = (u_planet_radius - u_sun_radius) / distance_to_sun;
  float fragment_cover_value = dot(n_position, n_light_vector);  // in [-1, 1]

  fragment_cover_value = max(fragment_cover_value, sun_cover);
  float sun_power = (fragment_cover_value - sun_cover) / (1.0 - sun_cover);
  gl_FragColor *= sqrt(sun_power);
  gl_FragColor[3] = 1.0;

  // Highlighting ring.
  if (u_process_touch) {
    float angle = acos(dot( normalize(v_position), normalize(u_touch_coord) ));
    if (highlighting_internal_ring_radius * u_touch_angle <= angle &&
        angle <= u_touch_angle) {
      float alpha = u_highlighting_color[3];
      gl_FragColor = (1.0 - alpha) * gl_FragColor +
                     alpha * u_highlighting_color;
    }
  }
}
